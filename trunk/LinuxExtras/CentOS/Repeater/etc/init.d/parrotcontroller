#!/bin/bash
#
# ParrotController startup script
# John Hays (K7VE) - john@hays.org
# Hans-J. Barthen (DL5DI) - dl5di@darc.de
#
# chkconfig: 345 99 01
# description: Starts the G4KLX ParrotController
# config: /etc/sysconfig/parrotcontroller
#


if [ $UID -ne 0 ]; then
	echo
	     echo "ERROR:  This script must be run as the root user!"
	     echo "        Please use 'su' or log in as root and try again."
	     echo
	     exit 1
fi

# Source function library.
if [ -f /etc/init.d/functions ] ; then
    . /etc/init.d/functions
elif [ -f /etc/rc.d/init.d/functions ] ; then
    . /etc/rc.d/init.d/functions
else
    exit 1
fi

# Source networking configuration.
[ -r /etc/sysconfig/network ] && . /etc/sysconfig/network

# Check that networking is up.
[ "${NETWORKING}" = "no" ] && exit 1

# Source the parrotcontroller configuration
[ -f /etc/sysconfig/parrotcontroller ] && . /etc/sysconfig/parrotcontroller

RETVAL=0

start() {

    echo -n "Starting parrotcontroller:"
    daemon --pidfile /var/run/parrotcontroller.pid $PARROTCONTROLLER_PATH $PARROTCONTROLLER_OPTIONS &
    RETVAL=$?
    [ $RETVAL -eq 0 ] && touch /var/lock/subsys/parrotcontroller
    pidofproc $PARROTCONTROLLER_PATH > /var/run/parrotcontroller.pid
    echo
    return $RETVAL
}

stop() {
    
    echo -n "Stopping parrotcontroller "
    killproc $PARROTCONTROLLER_PATH
    RETVAL=$?
    [ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/parrotcontroller
    echo
    return $RETVAL
}

restart() {
    stop
    sleep 2
    start
}	

# See how we were called.
case "$1" in
    start)
	start
	;;
    stop)
	stop
	;;
    restart)
	restart
	;;
    status)
	status $PARROTCONTROLLER_PATH
	;;
    *)
	echo -e $"\nUsage: \n\t$0 {option}"
	echo -e "\n\tOptions:\n"
	echo -e "\trestart       - restarts parrotcontroller\n"
	echo -e "\tstart         - starts parrotcontroller\n"
	echo -e "\tstatus        - display status\n"
	echo -e "\tstop          - stops parrotcontroller\n"
	echo -e "\n"
	exit 1
esac

exit $RETVAL
